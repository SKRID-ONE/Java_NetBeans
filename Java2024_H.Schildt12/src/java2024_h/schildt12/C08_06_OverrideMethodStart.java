/*
Переопределение методов
 */
package java2024_h.schildt12;

/**
В иерархии классов, когда метод в подклассе имеет то же имя и сигнатуру типа, 
* что и метод в его суперклассе, то говорят, что метод в подклассе 
переопределяет метод в суперклассе. При вызове переопределенного метода через 
* его подкласс всегда будет вызываться версия метода, определенная в подклассе. 
* Версия метода, определенная в суперк лассе, будет сокрыта. 
 */
public class C08_06_OverrideMethodStart {
    
    public static void main (String [] args) {
        B1 b1Ob = new B1(1,2,3);
        b1Ob.show();
        b1Ob.showSuper();
        b1Ob.show("Перегруженный методов");
    }
}

class A1 {
    int i,j;
    
    A1(int a, int b){
        i = a;
        j = b;
    }
    
    //Метод который будет переопределён.
    void show() {
        System.out.println("A1 i and j: "+i+","+j);
    }
}

class B1 extends A1 {
    int k;
    
    B1(int a, int b, int c){
        super(a,b);
        k = c;
    }
    
    //Метод который переопределит аналогичный метод из класса А1
    /*
    void show(){
        System.out.println("k: "+k);
    }
    */
    //Этот метод show() должен быть заменён на нижепредставленный, но оставлен для иллюстрации.
    
    // Получаем доступ к методу show() из класса А1 с использованием super();
    void showSuper(){
        super.show();
        System.out.println("k: "+k);
    }
    
    
    /* (!) Метод переопределяется только в случае, если имена и сигнатуры типов 
    двух методов идентичны, а иначе два метода будут просто перегруженными. 
    */
    //Демонстрация перегруженного, а не переопределнного метода (имеет другие параметры):
    
    void show (String text){
        System.out.println (text + k );
    }
    //Этот метод не переопределяет метод show() класса A1
    
}

